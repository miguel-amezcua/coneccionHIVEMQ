import time 
import paho.mqtt.client as mqtt


#funcion de conexion con servidor mqtt
def on_connect (client, userdata, flags, rc):
    print("codigo funcionando:" +str(rc))
    #topic entrar
    

def on_message( client, userdata, msg):
    print(msg.topic +' '+ str(msg.payload) )#cuando el cliente manda mensaje debe coincidir con te topic para realizar la comunicaci贸n
    
def on_publish(client,userdata,mid):   #create function for callback
   print("data published mid=",mid, "\n")
   pass

def on_disconnect(client, userdata, rc):
   print("client disconnected ok")

def on_subscribe(client, userdata, mid, granted_qos):   #create function for callback
   print("subscribed with qos",granted_qos, "\n")
   pass 

client = mqtt.Client()
client.on_connect = on_connect
client.on_message = on_message
client.on_disconnect = on_disconnect
client.on_publish = on_publish        #assign function to callback
client.on_subscribe = on_subscribe       #assign function to callback

client.username_pw_set("samydollar","frio")
client.connect("repstronic.ciateq.net.mx", 3000, 60)
client.subscribe("test/#") #linea de codigo hace funcionar el on_message, ubicaci贸n importante 

###########client.loop_forever()#ayuda a ciclar la comunicaci贸n 
client.loop_start()

time.sleep(1)
while True:
    client.publish("test/","iniciando pruebas  con MQtt:")# metodo de comunicaci贸n mas sencilla, depende directamente de un client.publish,==printf  
    time.sleep(15)

client.loop_stop()
client.disconnect()
